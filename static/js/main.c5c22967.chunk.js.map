{"version":3,"sources":["Components/Form.js","Components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","getweather","type","name","placeholder","Weather","className","description","tempreature","city","country","humidity","error","API_KEY","App","state","erro","event","a","preventDefault","target","elements","value","fetch","api","json","data","setState","Math","round","main","temp","sys","weather","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgBeA,EAZH,SAACC,GACT,OACE,uBAAMC,SAAUD,EAAME,WAAtB,UACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,YAC9C,wDCuBSC,EA7BA,SAACN,GACd,OACE,sBAAKO,UAAU,OAAf,UAEEP,EAAMQ,aAAe,oBAAGD,UAAU,WAAb,mBAA8B,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMQ,kBAGxFR,EAAMS,aAAe,oBAAGF,UAAU,WAAb,0BACrB,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMS,YAArC,gBAGAT,EAAMU,MAAQ,oBAAGH,UAAU,WAAb,kBAA6B,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMU,WAGhFV,EAAMW,SAAW,oBAAGJ,UAAU,WAAb,qBAAgC,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMW,cAGtFX,EAAMY,UAAY,oBAAGL,UAAU,WAAb,sBAAiC,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMY,eAIxFZ,EAAMa,OAAS,oBAAGN,UAAU,WAAb,mBAA8B,uBAAMA,UAAU,aAAhB,cAA+BP,EAAMa,gBCflFC,EAAU,mCAgEDC,E,4MA7DbC,MAAO,CACLP,YAAY,GACZC,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTJ,YAAY,GACZS,KAAK,I,EAIRf,W,uCAAa,WAAMgB,GAAN,qBAAAC,EAAA,6DACVD,EAAME,iBACAV,EAAOQ,EAAMG,OAAOC,SAASZ,KAAKa,MAClCZ,EAAUO,EAAMG,OAAOC,SAASX,QAAQY,MAHpC,SAIQC,MAAM,oDAAD,OAAqDd,EAArD,cAA+DC,EAA/D,kBAAgFG,IAJ7F,cAIJW,EAJI,gBAKQA,EAAIC,OALZ,OAKLC,EALK,OAMRjB,GAAMC,EACP,EAAKiB,SAAS,CACZnB,YAAYoB,KAAKC,MAAMH,EAAKI,KAAKC,MAAM,IACvCtB,KAAKiB,EAAKvB,KACVO,QAAQgB,EAAKM,IAAItB,QACjBC,SAASe,EAAKI,KAAKnB,SACnBJ,YAAYmB,EAAKO,QAAQ,GAAG1B,YAC5BK,MAAM,KAGV,EAAKe,SAAS,CAEZnB,YAAY,GACZC,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTJ,YAAY,GACZK,MAAM,+BAvBG,4C,kGA4BZ,WACA,OAEE,qBAAKN,UAAU,UAAf,SAEA,sBAAKA,UAAU,iBAAf,cAAiC,8CAEjC,cAAC,EAAD,CAAML,WAAYiC,KAAKjC,aACvB,cAAC,EAAD,CACAO,YAAa0B,KAAKnB,MAAMP,YACxBC,KAAMyB,KAAKnB,MAAMN,KACjBC,QAASwB,KAAKnB,MAAML,QACpBC,SAAUuB,KAAKnB,MAAMJ,SACrBJ,YAAa2B,KAAKnB,MAAMR,YACxBK,MAAOsB,KAAKnB,MAAMH,iB,GAtDJuB,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c5c22967.chunk.js","sourcesContent":["\r\nimport React  from 'react';\r\n\r\n\r\nconst Form =(props)=> {\r\n    return (\r\n      <form onSubmit={props.getweather}>\r\n      <input type=\"text\" name=\"city\" placeholder=\"City\"/>\r\n      <input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n      <button>Check Weather </button>\r\n\r\n      </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Form\r\n","import React  from 'react';\r\n\r\n\r\nconst Weather =(props)=> {\r\n  return (\r\n    <div className=\"info\">\r\n    {\r\n      props.description && <p className=\"info_key\">Today:<span className=\"info_value\"> {props.description}</span></p>\r\n    }\r\n    {\r\n      props.tempreature && <p className=\"info_key\">Tempreature :\r\n      <span className=\"info_value\"> {props.tempreature} Â°C </span></p>\r\n    }\r\n    {\r\n      props.city && <p className=\"info_key\">City:<span className=\"info_value\"> {props.city}</span></p>\r\n    }\r\n    {\r\n      props.country && <p className=\"info_key\">Country:<span className=\"info_value\"> {props.country}</span></p>\r\n    }\r\n    {\r\n      props.humidity && <p className=\"info_key\">Humidity:<span className=\"info_value\"> {props.humidity}</span></p>\r\n    }\r\n\r\n    {\r\n      props.error && <p className=\"info_key\">Error:<span className=\"info_value\"> {props.error}</span></p>\r\n    }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Weather\r\n","\n\nimport React, {Component} from 'react';\nimport Form from './Components/Form';\nimport Weather from './Components/Weather';\nimport './index.css';\n\n\n\nconst API_KEY = \"4f7482a326f320ce4e5579ef78684356\";\nclass App extends Component {\n\n  state ={\n    tempreature:'',\n    city:'',\n    country:'',\n    humidity:'',\n    description:'',\n    erro:''\n\n  }\n\n getweather = async(event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n    const country = event.target.elements.country.value;\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${API_KEY}`)\n   const data = await api.json();\n   if(city&&country){\n     this.setState({\n       tempreature:Math.round(data.main.temp)-273,\n       city:data.name,\n       country:data.sys.country,\n       humidity:data.main.humidity,\n       description:data.weather[0].description,\n       error:''\n     })\n   }else\n   this.setState({\n\n     tempreature:'',\n     city:'',\n     country:'',\n     humidity:'',\n     description:'',\n     error:'please insert a valid data'\n   })\n\n  }\n\n  render(){\n  return (\n\n    <div className=\"wrapper\">\n\n    <div className=\"form-container\"> <h1> Weather App</h1>\n\n    <Form getweather={this.getweather} />\n    <Weather\n    tempreature={this.state.tempreature}\n    city={this.state.city}\n    country={this.state.country}\n    humidity={this.state.humidity}\n    description={this.state.description}\n    error={this.state.error}\n     />\n\n     </div>\n    </div>\n  );\n}\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}